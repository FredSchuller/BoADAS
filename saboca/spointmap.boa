#!/usr/bin/env python

# APEX - Atacama Pathfinder EXperiment Project
#
# who       when        what
# --------  ----------  ----------------------------------------------
# mdumke    2009-07-03  Created
#                       Initial version based on t-081.f-0003 macros
# alundgre  2010-04-11  Sign switch commented out
# mdumke    2010-05-01  Added flagging & inverting as f(MJD)
# fschuller 2010-06-07  Use env. variable BOA_HOME_SABOCA
#
'''
Name: spointmap.boa

Pointmap reduction for SABOCA
'''

if not os.getenv('BOA_HOME_SABOCA'):
   raise 'Environment variable BOA_HOME_SABOCA undefined'
execfile(os.getenv('BOA_HOME_SABOCA')+'/boaSaboca.py')

#data.read(scannr)
data.zeroStart()
data.Data *= array(VtoJy,'f')

mjdref = data.ScanParam.MJD[0]
rcp=getSabocaRCP(mjdref)
data.MessHand.info("RCP file : %s " % rcp)
data.BolometerArray.updateRCP(rcp)
#
bad=getSabocaCross(mjdref)
data.MessHand.info("Bad channels : %s " % bad)
data.flagChannels(bad)
#
inverted=getSabocaInvert(mjdref)
data.MessHand.info("Inverted channels : %s " % inverted)
invertSomeChannels(inverted)
#
data.flatfield()

data.flagFractionRms()
data.flagSpeed(below=10.)
data.flagSpeed(above=150.)
data.flagAccel(above=800.)

base(order=1)
medianNoiseRemoval(chanRef=-1,factor=0.8,nbloop=5)
base(order=0)
weight()
data.doMap(sizeX=[-50,50],sizeY=[-50,50],oversamp=5,noPlot=1)

data.solvePointingOnMap(plot=1,radius=20)
result = data.PointingResult
daz=result['gauss_x_offset']['value']
delev=result['gauss_y_offset']['value']

print "####################################"
print "# pcorr %5.1f, %5.1f "%(daz,delev)
print "###################################"
